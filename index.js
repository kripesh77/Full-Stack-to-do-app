require("dotenv").config();
const JWT_SECRET = process.env.JWT_SECRET;
const MY_DATABASE_LINK = process.env.MY_DATABASE_LINK;

const mongoose = require("mongoose");

const express = require("express");
const jwt = require("jsonwebtoken");
const app = express();

app.use(express.json());

const { UserModel, TodoModel } = require("./db");
const authMiddleware = require("./auth");

let databaseConnected = false;
async function connectDB() {
  try {
    await mongoose.connect(MY_DATABASE_LINK);
    databaseConnected = true;
  } catch (error) {
    console.log("Database connection failed");
  }
}

function dbConnectionCheck(req, res, next) {
  if (!databaseConnected) {
    res.json({
      message: "We're having some issues, please try again later",
    });
    return;
  } else {
    next();
  }
}

app.use(dbConnectionCheck);

app.post("/signup", async (req, res) => {
  const email = req.body.email;
  const password = req.body.password;
  const name = req.body.name;

  try {
    await UserModel.create({
      email,
      password,
      name,
    });

    res.json({ message: "You're logged in" });
  } catch (error) {
    if (error.code == "11000") {
      res.json({ message: "Email already exists" });
      return;
    } else {
      res.json({
        message: "Cannot connect to the database, please try again later",
      });
    }
  }
});

app.post("/signin", async (req, res) => {
  const email = req.body.email;
  const password = req.body.password;

  const user = await UserModel.findOne({
    email,
    password,
  });

  /* 
  -If there's a user with that email and password, it returns the information stored in the db of that particular user
  -Here's what it looks like:
  {
   _id: new ObjectId('684d7fdd498d596f26fb59f9'),
   email: 'hello@gmail.com',
   password: 'hello123',
   name: 'hello',
   __v: 0
  }

  -Now in the code below, i'm just generating the token using that user's _id
  -"_id" is automatically generated by mongo and is unique for every users using mongoose
  */

  if (user) {
    const token = jwt.sign(
      {
        userId: user._id,
      },
      JWT_SECRET
    );
    res.json({
      token,
    });
  } else {
    res.status(403).json({
      message: "Incorrect credentials",
    });
  }
});

//todo is an authenticated endpoint
app.post("/todo", authMiddleware, async (req, res) => {
  const userId = req.userId;
  const description = req.body.description;

  await TodoModel.create({
    description,
    done: false,
    userId,
  });

  res.json({
    userId: req.userId,
  });
});

//todos is also an authenticated endpoint
//It extracts all the todos that the user has added in the database
app.get("/todos", authMiddleware, async (req, res) => {
  const userId = req.userId;
  const todos = await TodoModel.find({ userId });
  res.json({
    todos,
  });
});

//Due to asynchronous nature of js, we've to always connect to the database and then only start our server
connectDB()
  .then(() => {
    app.listen(2000, () => {
      console.log("Server started at port 2000");
    });
  })
  .catch((error) => console.log("Failed to connect", error));
